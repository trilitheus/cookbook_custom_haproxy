global
  user haproxy
  group haproxy
  stats socket /var/run/haproxy user haproxy group haproxy
  tune.ssl.default-dh-param 2048
  ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
  maxconn 2048
  log 127.0.0.1 local2

defaults
  errorfile 503 /etc/haproxy/errors/503.http
  mode http
  option forwardfor
  option http-server-close
  timeout client 50s
  timeout connect 5s
  timeout server 50s
  option httplog
  log global

<% @frontends['http'].each do |fe, opts| %>
frontend <%= fe %>
  bind <%= opts['listen'] %>:<%= opts['port'] %>
  reqadd X-Forwarded-Proto:\ http
  rspadd X-Frame-Options:\ SAMEORIGIN
  <% opts['acls'].each do |acl| %>
  acl <%= acl %>
  <% end %>
  <% opts['use_backend'].each do |be| %>
  use_backend <%= be %>
  <% end %>
<% end %>

<% @frontends['https'].each do |fe, opts| %>
frontend <%= fe %>
  bind <%= opts['listen'] %>:<%= opts['port'] %> ssl crt /etc/haproxy/ssl/<%= opts['certfile'] %>
  reqadd X-Forwarded-Proto:\ https
  rspadd X-Frame-Options:\ SAMEORIGIN
  <% opts['acls'].each do |acl| %>
  acl <%= acl %>
  <% end %>
  <% opts['use_backend'].each do |be| %>
  use_backend <%= be %>
  <% end %>
<% end %>

<% @backends.each do |be, opts| %>
backend <%= be %>
  <% if opts['redirect_to_ssl'] %>
  redirect scheme https if !{ ssl_fc }
  <% end %>
  balance roundrobin
  <% opts['app_server'].each do |name, address| %>
  server <%= name %> <%= address %> check
  <% end %>
<% end %>
